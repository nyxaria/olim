(* Content-type: application/mathematica *)

(*** Wolfram Notebook File ***)
(* http://www.wolfram.com/nb *)

(* CreatedBy='Mathematica 7.0' *)

(*CacheID: 234*)
(* Internal cache information:
NotebookFileLineBreakTest
NotebookFileLineBreakTest
NotebookDataPosition[       145,          7]
NotebookDataLength[     49900,       1462]
NotebookOptionsPosition[     39780,       1154]
NotebookOutlinePosition[     43583,       1262]
CellTagsIndexPosition[     42615,       1236]
WindowFrame->Normal*)

(* Beginning of Notebook Content *)
Notebook[{

Cell[CellGroupData[{
Cell["Electrostatics Example", "Section"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"<<", "c:\\femm42\\mathfemm\\mathfemm.m"}]], "Input",
 CellChangeTimes->{{3.526164917968602*^9, 3.5261649192166047`*^9}}],

Cell[BoxData["\<\"MathFEMM loaded at Sun 15 Nov 2015 23:01:52\"\>"], "Print",
 CellChangeTimes->{3.6566292822092476`*^9, 3.656630015331777*^9, 
  3.656630558820679*^9, 3.656630628464977*^9, 3.6566351368588896`*^9, 
  3.6566353129955935`*^9}]
}, Open  ]],

Cell["\<\
The objective of this notebook is to find the capacitance matrix associated \
with a set of four microstrip lines on top of a dielectric substrate.  We \
will consider lines that are 20 um wide and 2 um thick, separated by a 4 um \
distance.  The traces are laying centered atop of a 20 um by 200 um slab with \
a relative permeability of 4.  The slab rests on an infinite ground plane. We \
will consider a 1m depth in the into-the-page direction.\
\>", "Text"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"?", "OpenFEMM"}]], "Input"],

Cell[BoxData[
 StyleBox["\<\"OpenFEMM[] starts an external instance of FEMM and establishes \
an associated MathLink connection.\"\>", "MSG"]], "Print", "PrintUsage",
 CellChangeTimes->{3.6566353141987762`*^9},
 CellTags->"Info3656617313-3331672"]
}, Open  ]],

Cell[BoxData[
 RowBox[{"OpenFEMM", "[", "]"}]], "Input"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"?", "NewDocument"}]], "Input"],

Cell[BoxData[
 StyleBox["\<\"NewDocument[doctype] creates a new preprocessor document and \
opens up\\na new preprocessor window in FEMM. Specify doctype to be 0 for a \
magnetics problem, 1 for\\nan electrostatics problem, 2 for a heat flow \
problem, or 3 for a current flow problem.\\nAlternate form is Create[doctype]\
\"\>", "MSG"]], "Print", "PrintUsage",
 CellChangeTimes->{3.656635315198822*^9},
 CellTags->"Info3656617315-1678948"]
}, Open  ]],

Cell[BoxData[
 RowBox[{"NewDocument", "[", "1", "]"}]], "Input"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"?", "EIProbDef"}]], "Input"],

Cell[BoxData[
 StyleBox["\<\"EIProbDef[units,type,precision,depth,minangle] changes the \
problem definition. The units\\nparameter specifies the units used for \
measuring length in the problem domain. Valid \\\"units\\\"\\nentries are \
\\\"inches\\\", \\\"millimeters\\\", \\\"centimeters\\\", \\\"mils\\\", \
\\\"meters\\\", and \\\"micrometers\\\".\\nSet problemtype to \\\"planar\\\" \
for a 2-D planar problem, or to \\\"axi\\\" for an axisymmetric\\nproblem. \
The precision parameter dictates the precision required by the solver. For \
example,\\nspecifying 1.E-8 requires the RMS of the residual to be less than \
10^(-8). The depth parameter,\\nrepresents the depth of the problem in the \
into-the-page direction for 2-D planar problems. The\\nminangle parameter is \
a constraint for the mesh generator. It specifies the smallest \
permissible\\nangle in triangles that compose the finite element mesh. A good \
value to choose is 30 degrees, but\\nsmaller values may be needed for \
\\\"tough\\\" geometries that contain small angles.\"\>", "MSG"]], "Print", \
"PrintUsage",
 CellChangeTimes->{3.6566353155113373`*^9},
 CellTags->"Info3656617315-8498969"]
}, Open  ]],

Cell[BoxData[
 RowBox[{"EIProbDef", "[", 
  RowBox[{"\"\<micrometers\>\"", ",", "\"\<planar\>\"", ",", 
   RowBox[{"10", "^", 
    RowBox[{"(", 
     RowBox[{"-", "8"}], ")"}]}], ",", 
   RowBox[{"10", "^", "6"}], ",", "30"}], "]"}]], "Input"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"?", "EIDrawRectangle"}]], "Input"],

Cell[BoxData[
 StyleBox["\<\"EIDrawRectangle[x1,y1,x2,y2] adds nodes at {x1,y1}, {x1,y2}, \
{x2,y2} and\\n {x2,y1} and joins them with new segments.  Equivalent forms \
are:\\n\\nEIDrawRectangle[{x1,y1},{x2,y2}]\\n\\nEIDrawRectangle[{{x1,y1},{x2,\
y2}}]\"\>", "MSG"]], "Print", "PrintUsage",
 CellChangeTimes->{3.656635315776976*^9},
 CellTags->"Info3656617315-5754028"]
}, Open  ]],

Cell[BoxData[
 RowBox[{"EIDrawRectangle", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"2", ",", "0"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"22", ",", "2"}], "}"}]}], "]"}]], "Input"],

Cell[BoxData[
 RowBox[{"EIDrawRectangle", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
     RowBox[{"2", "+", "24"}], ",", "0"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"22", "+", "24"}], ",", "2"}], "}"}]}], "]"}]], "Input"],

Cell[BoxData[
 RowBox[{"EIDrawRectangle", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
     RowBox[{"-", "2"}], ",", "0"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"-", "22"}], ",", "2"}], "}"}]}], "]"}]], "Input"],

Cell[BoxData[
 RowBox[{"EIDrawRectangle", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
     RowBox[{
      RowBox[{"-", "2"}], "-", "24"}], ",", "0"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{
      RowBox[{"-", "22"}], "-", "24"}], ",", "2"}], "}"}]}], "]"}]], "Input"],

Cell[BoxData[
 RowBox[{"EIDrawRectangle", "[", 
  RowBox[{"{", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{
      RowBox[{"-", "100"}], ",", 
      RowBox[{"-", "20"}]}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{"100", ",", "0"}], "}"}]}], "}"}], "]"}]], "Input"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"?", "EIDrawLine"}]], "Input"],

Cell[BoxData[
 StyleBox["\<\"EIDrawLine[x1,y1,x2,y2] adds points at {x1,y1} and {x2,y2} and \
then adds\\na segment connecting these two points.  Equivalent forms \
are:\\n\\nEIDrawLine[{x1,y1},{x2,y2}]\\n\\nEIDrawLine[{{x1,y1},{x2,y2}}]\"\>",
   "MSG"]], "Print", "PrintUsage",
 CellChangeTimes->{3.6566353162457495`*^9},
 CellTags->"Info3656617316-8884446"]
}, Open  ]],

Cell[BoxData[
 RowBox[{"EIDrawLine", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
     RowBox[{"-", "120"}], ",", 
     RowBox[{"-", "20"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"120", ",", 
     RowBox[{"-", "20"}]}], "}"}]}], "]"}]], "Input"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"?", "EIDrawArc"}]], "Input"],

Cell[BoxData[
 StyleBox["\<\"EIDrawArc[x1,y1,x2,y2,angle,maxseg] adds an arc to the \
electrostatics\\ninput geometry by drawing points at {x1,y1} and {x2,y2} and \
then connecting\\nthem with an arc segment. The arc spans a number of degrees \
specified by\\nangle. Since FEMM approximates arcs by many line segments, the \
parameter\\nmaxseg specifies the maximum number of degrees that is allowed to \
be spanned\\nby any one segment. Equivalent forms \
are:\\n\\nEIDrawArc[{x1,y1},{x2,y2},angle,maxseg]\\n\\nEIDrawArc[{{x1,y1},{x2,\
y2}},angle,maxseg]\"\>", "MSG"]], "Print", "PrintUsage",
 CellChangeTimes->{3.656635316558262*^9},
 CellTags->"Info3656617316-6564226"]
}, Open  ]],

Cell[BoxData[
 RowBox[{"EIDrawArc", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"120", ",", 
     RowBox[{"-", "20"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"-", "120"}], ",", 
     RowBox[{"-", "20"}]}], "}"}], ",", "180", ",", "2.5"}], "]"}]], "Input"],

Cell[BoxData[
 RowBox[{"EIDrawArc", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"100", ",", "100"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"120", ",", "100"}], "}"}], ",", "180", ",", "2.5"}], 
  "]"}]], "Input"],

Cell[BoxData[
 RowBox[{"EIDrawLine", "[", 
  RowBox[{"{", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"100", ",", "100"}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{"120", ",", "100"}], "}"}]}], "}"}], "]"}]], "Input"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"?", "EIAddBoundProp"}]], "Input"],

Cell[BoxData[
 StyleBox["\<\"EIAddBoundProp[\\\"boundpropname\\\", Vs,qs,c0,c1,BdryFormat] \
adds a new boundary\\nproperty with name \\\"boundpropname\\\"\\n\\nFor a \
\\\"Fixed Temperature\\\" type boundary condition, set the Vs parameter to \
the\\ndesired voltage and all other parameters to zero.\\n\\nTo obtain a \
\\\"Mixed\\\" type boundary condition, set C1 and C0 as required \
and\\nBdryFormat to 1. Set all other parameters to zero.\\n\\nTo obtain a \
prescribes surface charge density, set qs to the desired charge\\ndensity in \
C/m2 and set BdryFormat to 2.\\n\\nFor a \\\"Periodic\\\" boundary condition, \
set BdryFormat to 3 and set all other\\nparameters to zero.\\n\\nFor an \
\\\"Anti-Perodic\\\" boundary condition, set BdryFormat to 4 set all \
other\\nparameters to zero.\"\>", "MSG"]], "Print", "PrintUsage",
 CellChangeTimes->{3.656635317230172*^9},
 CellTags->"Info3656617317-2065219"]
}, Open  ]],

Cell[BoxData[
 RowBox[{"EIAddBoundProp", "[", 
  RowBox[{
  "\"\<ground\>\"", ",", "0", ",", "0", ",", "0", ",", "0", ",", "0"}], 
  "]"}]], "Input"],

Cell[BoxData[
 RowBox[{"EIAddBoundProp", "[", 
  RowBox[{
  "\"\<periodic\>\"", ",", "0", ",", "0", ",", "0", ",", "0", ",", "3"}], 
  "]"}]], "Input"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"?", "EISelectArcSegment"}]], "Input"],

Cell[BoxData[
 StyleBox["\<\"EISelectArcSegment[x,y] selects the arc segment closest to \
{x,y}.  An equivalent form is:\\n\\nEISelectArcSegment[{x,y}]\"\>", 
  "MSG"]], "Print", "PrintUsage",
 CellChangeTimes->{3.6566353175583086`*^9},
 CellTags->"Info3656617317-2253206"]
}, Open  ]],

Cell[BoxData[
 RowBox[{"EISelectArcSegment", "[", 
  RowBox[{"0", ",", "100"}], "]"}]], "Input"],

Cell[BoxData[
 RowBox[{"EISelectArcSegment", "[", 
  RowBox[{"110", ",", "80"}], "]"}]], "Input"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"?", "EISetArcSegmentProp"}]], "Input"],

Cell[BoxData[
 StyleBox["\<\"EISetArcSegmentProp[maxsegdeg, \\\"propname\\\", hide, \
groupno,\\\"inconductor\\\"]\\nsets the properties associated with the \
selected arc segments\\n\\nmaxsegdeg specifies that the arcs must be meshed \
with elements that span at\\nmost maxsegdeg degrees per \
element\\n\\n\\\"propname\\\" specifies the boundary property to be \
associated with the\\nselected arcs\\n\\nhide: 0 = not hidden in \
post-processor, 1 == hidden in post processor\\n\\ngroupno is an integer \
specifying the group number of which the selected arcs\\nare to be \
members.\\n\\n\\\"inconductor\\\" specifies the name of the conductor \
property with which the\\nselected arcs are to be associated. If the arcs is \
not to be part of a\\nconductor, this parameter can be specified as \
\\\"<None>\\\".\"\>", "MSG"]], "Print", "PrintUsage",
 CellChangeTimes->{3.656635317792694*^9},
 CellTags->"Info3656617317-1369433"]
}, Open  ]],

Cell[BoxData[
 RowBox[{"EISetArcSegmentProp", "[", 
  RowBox[{
  "2.5", ",", "\"\<periodic\>\"", ",", "0", ",", "0", ",", "\"\<<None>\>\""}],
   "]"}]], "Input"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"?", "EIClearSelected"}]], "Input"],

Cell[BoxData[
 StyleBox["\<\"EIClearSelected[] clear all selected nodes, blocks, segments \
and arc segments.\"\>", "MSG"]], "Print", "PrintUsage",
 CellChangeTimes->{3.6566353180427074`*^9},
 CellTags->"Info3656617317-8617361"]
}, Open  ]],

Cell[BoxData[
 RowBox[{"EIClearSelected", "[", "]"}]], "Input"],

Cell[BoxData[
 RowBox[{"EISelectSegment", "[", 
  RowBox[{"0", ",", 
   RowBox[{"-", "20"}]}], "]"}]], "Input"],

Cell[BoxData[
 RowBox[{"EISelectSegment", "[", 
  RowBox[{"110", ",", 
   RowBox[{"-", "20"}]}], "]"}]], "Input"],

Cell[BoxData[
 RowBox[{"EISelectSegment", "[", 
  RowBox[{
   RowBox[{"-", "110"}], ",", 
   RowBox[{"-", "20"}]}], "]"}]], "Input"],

Cell[BoxData[
 RowBox[{"EISelectSegment", "[", 
  RowBox[{"110", ",", "100"}], "]"}]], "Input"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"?", "EISetSegmentProp"}]], "Input"],

Cell[BoxData[
 StyleBox["\<\"EISetSegmentProp[\\\"propname\\\",elementsize,automesh,hide,\
groupno,\\\"inconductor\\\"]\\nsets the select segments to \
have:\\n\\nBoundary property \\\"propname\\\"\\n\\nLocal element size along \
segment no greater than elementsize\\n\\nautomesh: 0 = mesher defers to the \
element constraint defined by elementsize, 1 = mesher\\nautomatically chooses \
mesh size along the selected segments\\n\\nhide: 0 = not hidden in \
post-processor, 1 == hidden in post\\nprocessor\\n\\nA member of group number \
groupno\\n\\nA member of the conductor specified by the string \
\\\"inconductor\\\". If the segment is not\\npart of a conductor, this \
parameter can be specified as \\\"<None>\\\".\"\>", "MSG"]], "Print", \
"PrintUsage",
 CellChangeTimes->{3.6566353183708553`*^9},
 CellTags->"Info3656617318-8513279"]
}, Open  ]],

Cell[BoxData[
 RowBox[{"EISetSegmentProp", "[", 
  RowBox[{
  "\"\<ground\>\"", ",", "0", ",", "1", ",", "0", ",", "0", ",", 
   "\"\<<None>\>\""}], "]"}]], "Input"],

Cell[BoxData[
 RowBox[{"EIClearSelected", "[", "]"}]], "Input"],

Cell[BoxData[{
 RowBox[{
  RowBox[{"For", "[", 
   RowBox[{
    RowBox[{"i", "=", "0"}], ",", 
    RowBox[{"i", "<", "4"}], ",", 
    RowBox[{"i", "++"}], ",", "\[IndentingNewLine]", 
    RowBox[{"EIAddBlockLabel", "[", 
     RowBox[{
      RowBox[{
       RowBox[{"-", "36"}], "+", 
       RowBox[{"i", "*", "24"}]}], ",", "1"}], "]"}]}], "\[IndentingNewLine]",
    "]"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{"For", "[", 
  RowBox[{
   RowBox[{"i", "=", "0"}], ",", 
   RowBox[{"i", "<", "4"}], ",", 
   RowBox[{"i", "++"}], ",", "\[IndentingNewLine]", 
   RowBox[{"EISelectLabel", "[", 
    RowBox[{
     RowBox[{
      RowBox[{"-", "36"}], "+", 
      RowBox[{"i", "*", "24"}]}], ",", "1"}], "]"}]}], "\[IndentingNewLine]", 
  "]"}]}], "Input",
 CellChangeTimes->{{3.656635047184209*^9, 3.6566350649694953`*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"?", "EISetBlockProp"}]], "Input"],

Cell[BoxData[
 StyleBox["\<\"EISetBlockProp[\\\"blockname\\\",automesh,meshsize,groupno] \
sets the selected block\\nlabels to have the properties:\\n\\nBlock property \
\\\"blockname\\\".\\n\\nautomesh: 0 = mesher defers to mesh size constraint \
defined in meshsize, 1 = mesher\\nautomatically chooses the mesh \
density.\\n\\nmeshsize: size constraint on the mesh in the block marked by \
this label\\n.\\ngroupno: make selected members of specified group \
number\"\>", "MSG"]], "Print", "PrintUsage",
 CellChangeTimes->{3.656635318761489*^9},
 CellTags->"Info3656617318-9793415"]
}, Open  ]],

Cell[BoxData[
 RowBox[{"EISetBlockProp", "[", 
  RowBox[{"\"\<<No Mesh>\>\"", ",", "0", ",", "1", ",", "0"}], "]"}]], "Input"],

Cell[BoxData[
 RowBox[{"EIClearSelected", "[", "]"}]], "Input"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"?", "EIAddMaterial"}]], "Input"],

Cell[BoxData[
 StyleBox["\<\"EIAddMaterial[\\\"materialname\\\",ex,ey,qv] adds a new \
material with called\\n\\\"materialname\\\" with the material \
properties:\\n\\nex Relative permittivity in the x- or r-direction.\\n\\ney \
Relative permittivity in the y- or z-direction.\\n\\nqv Volume charge density \
in units of C/m^3\"\>", "MSG"]], "Print", "PrintUsage",
 CellChangeTimes->{3.6566353190115023`*^9},
 CellTags->"Info3656617318-2044832"]
}, Open  ]],

Cell[BoxData[
 RowBox[{"EIAddMaterial", "[", 
  RowBox[{"\"\<air\>\"", ",", "1", ",", "1", ",", "0"}], "]"}]], "Input"],

Cell[BoxData[
 RowBox[{"EIAddMaterial", "[", 
  RowBox[{"\"\<dielectric\>\"", ",", "4", ",", "4", ",", "0"}], 
  "]"}]], "Input"],

Cell[BoxData[
 RowBox[{"EIAddBlockLabel", "[", 
  RowBox[{"0", ",", 
   RowBox[{"-", "10"}]}], "]"}]], "Input"],

Cell[BoxData[
 RowBox[{"EIAddBlockLabel", "[", 
  RowBox[{"0", ",", "50"}], "]"}]], "Input"],

Cell[BoxData[
 RowBox[{"EIAddBlockLabel", "[", 
  RowBox[{"110", ",", "95"}], "]"}]], "Input"],

Cell[BoxData[{
 RowBox[{
  RowBox[{"EISelectLabel", "[", 
   RowBox[{"0", ",", 
    RowBox[{"-", "10"}]}], "]"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"EISetBlockProp", "[", 
   RowBox[{"\"\<dielectric\>\"", ",", "0", ",", "1", ",", "0"}], "]"}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"EIClearSelected", "[", "]"}], ";"}]}], "Input"],

Cell[BoxData[{
 RowBox[{
  RowBox[{"EISelectLabel", "[", 
   RowBox[{"0", ",", "50"}], "]"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"EISelectLabel", "[", 
   RowBox[{"110", ",", "95"}], "]"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"EISetBlockProp", "[", 
   RowBox[{"\"\<air\>\"", ",", "0", ",", "1", ",", "0"}], "]"}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"EIClearSelected", "[", "]"}], ";"}]}], "Input"],

Cell["\<\
For the first run, we will set the voltage on the 0th conductor to 1 V, and \
the voltages on the other conductors to 0 V.  We can then obtain the coupled \
capacitances by examining the charge that accumulates on each conductor.\
\>", "Text"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"?", "EIAddConductorProp"}]], "Input"],

Cell[BoxData[
 StyleBox["\<\"EIAddConductorProp[\\\"conductorname\\\",Vc,qc,conductortype] \
adds a new\\nconductor property with name \\\"conductorname\\\" with either a \
prescribed\\nvoltage or a prescribed total charge. Set the unused property to \
zero. The\\nconductortype parameter is 0 for prescribed charge and 1 for \
prescribed\\nvoltage.\"\>", "MSG"]], "Print", "PrintUsage",
 CellChangeTimes->{3.6566353193708935`*^9},
 CellTags->"Info3656617319-8112750"]
}, Open  ]],

Cell[BoxData[
 RowBox[{"EIAddConductorProp", "[", 
  RowBox[{"\"\<V0\>\"", ",", "1", ",", "0", ",", "1"}], "]"}]], "Input"],

Cell[BoxData[
 RowBox[{"EIAddConductorProp", "[", 
  RowBox[{"\"\<V1\>\"", ",", "0", ",", "0", ",", "1"}], "]"}]], "Input"],

Cell[BoxData[
 RowBox[{"EIAddConductorProp", "[", 
  RowBox[{"\"\<V2\>\"", ",", "0", ",", "0", ",", "1"}], "]"}]], "Input"],

Cell[BoxData[
 RowBox[{"EIAddConductorProp", "[", 
  RowBox[{"\"\<V3\>\"", ",", "0", ",", "0", ",", "1"}], "]"}]], "Input"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"?", "EISetSegmentProp"}]], "Input"],

Cell[BoxData[
 StyleBox["\<\"EISetSegmentProp[\\\"propname\\\",elementsize,automesh,hide,\
groupno,\\\"inconductor\\\"]\\nsets the select segments to \
have:\\n\\nBoundary property \\\"propname\\\"\\n\\nLocal element size along \
segment no greater than elementsize\\n\\nautomesh: 0 = mesher defers to the \
element constraint defined by elementsize, 1 = mesher\\nautomatically chooses \
mesh size along the selected segments\\n\\nhide: 0 = not hidden in \
post-processor, 1 == hidden in post\\nprocessor\\n\\nA member of group number \
groupno\\n\\nA member of the conductor specified by the string \
\\\"inconductor\\\". If the segment is not\\npart of a conductor, this \
parameter can be specified as \\\"<None>\\\".\"\>", "MSG"]], "Print", \
"PrintUsage",
 CellChangeTimes->{3.6566353197615376`*^9},
 CellTags->"Info3656617319-8819928"]
}, Open  ]],

Cell[BoxData[{
 RowBox[{
  RowBox[{"EISelectSegment", "[", 
   RowBox[{
    RowBox[{"-", "46"}], ",", "1"}], "]"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"EISelectSegment", "[", 
   RowBox[{
    RowBox[{"-", "26"}], ",", "1"}], "]"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"EISelectSegment", "[", 
   RowBox[{
    RowBox[{"-", "36"}], ",", "2"}], "]"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"EISelectSegment", "[", 
   RowBox[{
    RowBox[{"-", "36"}], ",", "0"}], "]"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"EISetSegmentProp", "[", 
   RowBox[{
   "\"\<<None>\>\"", ",", "0.25", ",", "0", ",", "0", ",", "0", ",", 
    "\"\<V0\>\""}], "]"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{"EIClearSelected", "[", "]"}]}], "Input"],

Cell[BoxData[{
 RowBox[{
  RowBox[{"EISelectSegment", "[", 
   RowBox[{
    RowBox[{
     RowBox[{"-", "46"}], "+", "24"}], ",", "1"}], "]"}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"EISelectSegment", "[", 
   RowBox[{
    RowBox[{
     RowBox[{"-", "26"}], "+", "24"}], ",", "1"}], "]"}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"EISelectSegment", "[", 
   RowBox[{
    RowBox[{
     RowBox[{"-", "36"}], "+", "24"}], ",", "2"}], "]"}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"EISelectSegment", "[", 
   RowBox[{
    RowBox[{
     RowBox[{"-", "36"}], "+", "24"}], ",", "0"}], "]"}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"EISetSegmentProp", "[", 
   RowBox[{
   "\"\<<None>\>\"", ",", "0.25", ",", "0", ",", "0", ",", "0", ",", 
    "\"\<V1\>\""}], "]"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{"EIClearSelected", "[", "]"}]}], "Input"],

Cell[BoxData[{
 RowBox[{
  RowBox[{"EISelectSegment", "[", 
   RowBox[{
    RowBox[{
     RowBox[{"-", "46"}], "+", 
     RowBox[{"2", "*", "24"}]}], ",", "1"}], "]"}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"EISelectSegment", "[", 
   RowBox[{
    RowBox[{
     RowBox[{"-", "26"}], "+", 
     RowBox[{"2", "*", "24"}]}], ",", "1"}], "]"}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"EISelectSegment", "[", 
   RowBox[{
    RowBox[{
     RowBox[{"-", "36"}], "+", 
     RowBox[{"2", "*", "24"}]}], ",", "2"}], "]"}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"EISelectSegment", "[", 
   RowBox[{
    RowBox[{
     RowBox[{"-", "36"}], "+", 
     RowBox[{"2", "*", "24"}]}], ",", "0"}], "]"}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"EISetSegmentProp", "[", 
   RowBox[{
   "\"\<<None>\>\"", ",", "0.25", ",", "0", ",", "0", ",", "0", ",", 
    "\"\<V2\>\""}], "]"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{"EIClearSelected", "[", "]"}]}], "Input"],

Cell[BoxData[{
 RowBox[{
  RowBox[{"EISelectSegment", "[", 
   RowBox[{
    RowBox[{
     RowBox[{"-", "46"}], "+", 
     RowBox[{"3", "*", "24"}]}], ",", "1"}], "]"}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"EISelectSegment", "[", 
   RowBox[{
    RowBox[{
     RowBox[{"-", "26"}], "+", 
     RowBox[{"3", "*", "24"}]}], ",", "1"}], "]"}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"EISelectSegment", "[", 
   RowBox[{
    RowBox[{
     RowBox[{"-", "36"}], "+", 
     RowBox[{"3", "*", "24"}]}], ",", "2"}], "]"}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"EISelectSegment", "[", 
   RowBox[{
    RowBox[{
     RowBox[{"-", "36"}], "+", 
     RowBox[{"3", "*", "24"}]}], ",", "0"}], "]"}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"EISetSegmentProp", "[", 
   RowBox[{
   "\"\<<None>\>\"", ",", "0.25", ",", "0", ",", "0", ",", "0", ",", 
    "\"\<V3\>\""}], "]"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{"EIClearSelected", "[", "]"}]}], "Input"],

Cell["Get a snapshot of the problem input geometry:", "Text"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"EIRestore", "[", "]"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"EIResize", "[", 
   RowBox[{"640", ",", "320"}], "]"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"EIZoomNatural", "[", "]"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{"Show", "[", 
  RowBox[{"EIGetView", "[", "]"}], "]"}]}], "Input"],

Cell[BoxData[
 GraphicsBox[
  TagBox[RasterBox[CompressedData["
1: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
yzdRxKzGVXNjLnITdetBbDOd5worFYhZDc2FdLZNPLk9zz1/dbU+fWbgq5d3
uPr+/up6N/n93vX+c8cPb+6qf19QRthq7BemuZDCz7Z/x+zdvrbc++ru6r6F
w1/dXTtG8+d7tf3yTVjPZ70Xd3X5XVBU2GpoLuRxbuXmTnMvvnr6YPCr/YZf
3+3m5nXm/l15/Zklha2G5kIeu/POx83tv+p8ftF38KsXd3h1t5uHzb3zXVBU
2GpoLuQxfJ57P4WDX724w6u73Qye52ouSwpbDc2FGnV/uv7l+OleOHdXH7+f
e36fdfird9/Pvfv3V9d35f1cFhS2GpoLNep19uL6+SXi1erev5/bewX58Lnh
r15+8jejP4e/Xb76Q+XHd+WUl+LCVkNzoUYPmwsErobmQo00FwaErYbmQo0e
vJ8L7ISthuYCkEzYamguAMmErYbmApBM2Gr0mrv0Uh6LvDYAoglbDc0FIJnI
1diuTXMBSCNyNTQXgEwiV0NzAcgkcjU0F4BMIldDcwHIJHI1NBeATCJXQ3MB
yCRyNTQXgEwiV0NzAcgkcjU0F4BMIldDcwHIJHI1NBeATCJXQ3MByCRyNTQX
gEwiV0NzAcgkcjU0F4BMIlfj2NyDpZdzobu09HIACC1yNW6XFnCFm+NvLNHW
BkA0katxWtu+uZdXgly6B9ddXFxcXFxuL5GrcU7t/wM4Em6R
    "], {{0, 336}, {636, 0}}, {0, 255},
    ColorFunction->RGBColor],
   BoxForm`ImageTag["Byte", ColorSpace -> "RGB", Interleaving -> True],
   Selectable->False],
  BaseStyle->"ImageGraphics",
  ImageSize->Automatic,
  ImageSizeRaw->{636, 336},
  PlotRange->{{0, 636}, {0, 336}}]], "Output",
 CellChangeTimes->{3.656635320667828*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"?", "EISaveAs"}]], "Input"],

Cell[BoxData[
 StyleBox["\<\"EISaveAs[\\\"filename\\\"] saves the file with name \
\\\"filename\\\". Note if you use a path you\\nmust use two backslashes e.g. \
\\\"c:\\\\\\\\temp\\\\\\\\myfemmfile.fem\\\"\"\>", "MSG"]], "Print", \
"PrintUsage",
 CellChangeTimes->{3.656635320933463*^9},
 CellTags->"Info3656617320-6657519"]
}, Open  ]],

Cell[BoxData[
 RowBox[{"EISaveAs", "[", " ", 
  RowBox[{
   RowBox[{"NotebookDirectory", "[", "]"}], "<>", "\"\<strips.fee\>\""}], 
  "]"}]], "Input",
 CellChangeTimes->{{3.6566351040478945`*^9, 3.656635123186563*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"?", "EIAnalyze"}]], "Input"],

Cell[BoxData[
 StyleBox["\<\"EIAnalyze[(flag)] runs the electrostatics solver. The flag \
parameter controls\\nwhether the solver window is visible or minimized. For a \
visible window, either\\nspecify no value for flag or specify 0. For a \
minimized window, flag should be\\nset to 1. An equivalent form \
is:\\n\\nEIAnalyse[(flag)]\"\>", "MSG"]], "Print", "PrintUsage",
 CellChangeTimes->{3.6566353211678505`*^9},
 CellTags->"Info3656617321-7595342"]
}, Open  ]],

Cell[BoxData[
 RowBox[{"EIAnalyze", "[", "]"}]], "Input"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"?", "EILoadSolution"}]], "Input"],

Cell[BoxData[
 StyleBox["\<\"EILoadSolution[] loads and displays the solution corresponding \
to the\\ncurrent geometry.\"\>", "MSG"]], "Print", "PrintUsage",
 CellChangeTimes->{3.6566353290900974`*^9},
 CellTags->"Info3656617328-1519253"]
}, Open  ]],

Cell[BoxData[
 RowBox[{"EILoadSolution", "[", "]"}]], "Input"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"?", "EOGetConductorProperties"}]], "Input"],

Cell[BoxData[
 StyleBox["\<\"EOGetConductorProperties[\\\"conductor\\\"] returns properties \
for the\\nconductor property named \\\"conductor\\\". A list with two values \
is returned: The voltage of the specified\\nconductor, and the charge carried \
on the specified conductor.\"\>", "MSG"]], "Print", "PrintUsage",
 CellChangeTimes->{3.656635330371406*^9},
 CellTags->"Info3656617330-9829355"]
}, Open  ]],

Cell[BoxData[
 RowBox[{
  RowBox[{"c", "=", 
   RowBox[{"Table", "[", 
    RowBox[{"0", ",", 
     RowBox[{"{", "4", "}"}]}], "]"}]}], ";"}]], "Input"],

Cell["\<\
The first row of the capacitance matrix is gleaned by collecting the charge \
on each conductor\
\>", "Text"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"c", "[", 
   RowBox[{"[", "1", "]"}], "]"}], "=", 
  RowBox[{"{", 
   RowBox[{
    RowBox[{
     RowBox[{"EOGetConductorProperties", "[", "\"\<V0\>\"", "]"}], "[", 
     RowBox[{"[", "2", "]"}], "]"}], ",", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"EOGetConductorProperties", "[", "\"\<V1\>\"", "]"}], "[", 
     RowBox[{"[", "2", "]"}], "]"}], ",", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"EOGetConductorProperties", "[", "\"\<V2\>\"", "]"}], "[", 
     RowBox[{"[", "2", "]"}], "]"}], ",", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"EOGetConductorProperties", "[", "\"\<V3\>\"", "]"}], "[", 
     RowBox[{"[", "2", "]"}], "]"}]}], "}"}]}]], "Input"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"9.605214682590402`*^-11", ",", 
   RowBox[{"-", "3.331846283713619`*^-11"}], ",", 
   RowBox[{"-", "1.213138930940426`*^-12"}], ",", 
   RowBox[{"-", "5.222522135659578`*^-13"}]}], "}"}]], "Output",
 CellChangeTimes->{3.656630029777585*^9, 3.6566351576524906`*^9, 
  3.6566353338246927`*^9}]
}, Open  ]],

Cell["\<\
By symmetry, we can also infer the fourth row on the capacitance matrix:\
\>", "Text"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"c", "[", 
   RowBox[{"[", "4", "]"}], "]"}], "=", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"0", ",", "0", ",", "0", ",", "1"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"0", ",", "0", ",", "1", ",", "0"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"0", ",", "1", ",", "0", ",", "0"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"1", ",", "0", ",", "0", ",", "0"}], "}"}]}], "}"}], ".", 
   RowBox[{"c", "[", 
    RowBox[{"[", "1", "]"}], "]"}]}]}]], "Input"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"-", "5.222522135659578`*^-13"}], ",", 
   RowBox[{"-", "1.213138930940426`*^-12"}], ",", 
   RowBox[{"-", "3.331846283713619`*^-11"}], ",", "9.605214682590402`*^-11"}],
   "}"}]], "Output",
 CellChangeTimes->{3.656630029824462*^9, 3.6566351577462454`*^9, 
  3.6566353339340754`*^9}]
}, Open  ]],

Cell["\<\
We can then obtain the last two rows of the matrix by setting \"V1\" to 1 V \
and the rest of the voltages to 0V.\
\>", "Text"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"??", "EIModifyConductorProp"}]], "Input"],

Cell[CellGroupData[{

Cell[BoxData[
 StyleBox["\<\"EIModifyConductorProp[\\\"ConductorName\\\",propnum,value] \
allows for\\nmodification of a conductor property. The conductor property to \
be modified is\\nspecified by \\\"ConductorName\\\". The next parameter is \
the number of the property\\nto be set. The last number is the value to be \
applied to the specified\\nproperty. The various properties that can be \
modified are listed below:\\n\\n0 - \\\"ConductorName\\\" - Name of the \
conductor property\\n\\n1 - Vc - Conductor voltage\\n\\n2 - qc - Total \
conductor charge\\n\\n3 - ConductorType - 0 = Prescribed charge, 1 = \
Prescribed voltage\"\>", "MSG"]], "Print", "PrintUsage",
 CellChangeTimes->{3.6566353341276054`*^9},
 CellTags->"Info3656617334-4692816"],

Cell[BoxData[
 InterpretationBox[GridBox[{
    {
     RowBox[{
      RowBox[{"Attributes", "[", "EIModifyConductorProp", "]"}], "=", 
      RowBox[{"{", 
       RowBox[{"Locked", ",", "Protected", ",", "ReadProtected"}], "}"}]}]}
   },
   BaselinePosition->{Baseline, {1, 1}},
   GridBoxAlignment->{
    "Columns" -> {{Left}}, "ColumnsIndexed" -> {}, "Rows" -> {{Baseline}}, 
     "RowsIndexed" -> {}}],
  Definition[MathFEMM`EIModifyConductorProp],
  Editable->False]], "Print",
 CellChangeTimes->{3.6566353341744833`*^9},
 CellTags->"Info3656617334-4692816"]
}, Open  ]]
}, Open  ]],

Cell[BoxData[
 RowBox[{"EIModifyConductorProp", "[", 
  RowBox[{"\"\<V0\>\"", ",", "1", ",", "0"}], "]"}]], "Input"],

Cell[BoxData[
 RowBox[{"EIModifyConductorProp", "[", 
  RowBox[{"\"\<V1\>\"", ",", "1", ",", "1"}], "]"}]], "Input"],

Cell[BoxData[
 RowBox[{"EIAnalyze", "[", "]"}]], "Input"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"?", "EOReload"}]], "Input"],

Cell[BoxData[
 StyleBox["\<\"EOReload[] reloads the current electrostatics output\\nfile.\"\
\>", "MSG"]], "Print", "PrintUsage",
 CellChangeTimes->{3.656635342266365*^9},
 CellTags->"Info3656617342-2368700"]
}, Open  ]],

Cell[BoxData[
 RowBox[{"EOReload", "[", "]"}]], "Input"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"c", "[", 
   RowBox[{"[", "2", "]"}], "]"}], "=", 
  RowBox[{"{", 
   RowBox[{
    RowBox[{
     RowBox[{"EOGetConductorProperties", "[", "\"\<V0\>\"", "]"}], "[", 
     RowBox[{"[", "2", "]"}], "]"}], ",", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"EOGetConductorProperties", "[", "\"\<V1\>\"", "]"}], "[", 
     RowBox[{"[", "2", "]"}], "]"}], ",", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"EOGetConductorProperties", "[", "\"\<V2\>\"", "]"}], "[", 
     RowBox[{"[", "2", "]"}], "]"}], ",", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"EOGetConductorProperties", "[", "\"\<V3\>\"", "]"}], "[", 
     RowBox[{"[", "2", "]"}], "]"}]}], "}"}]}]], "Input"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"-", "3.329439655378682`*^-11"}], ",", "1.121601492939742`*^-10", 
   ",", 
   RowBox[{"-", "3.285563024257395`*^-11"}], ",", 
   RowBox[{"-", "1.213995293904682`*^-12"}]}], "}"}]], "Output",
 CellChangeTimes->{3.6566300386373744`*^9, 3.6566351706532435`*^9, 
  3.6566353468447027`*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"c", "[", 
   RowBox[{"[", "3", "]"}], "]"}], "=", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"0", ",", "0", ",", "0", ",", "1"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"0", ",", "0", ",", "1", ",", "0"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"0", ",", "1", ",", "0", ",", "0"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"1", ",", "0", ",", "0", ",", "0"}], "}"}]}], "}"}], ".", 
   RowBox[{"c", "[", 
    RowBox[{"[", "2", "]"}], "]"}]}]}]], "Input"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"-", "1.213995293904682`*^-12"}], ",", 
   RowBox[{"-", "3.285563024257395`*^-11"}], ",", "1.121601492939742`*^-10", 
   ",", 
   RowBox[{"-", "3.329439655378682`*^-11"}]}], "}"}]], "Output",
 CellChangeTimes->{3.6566300388405104`*^9, 3.6566351707624793`*^9, 
  3.656635346954089*^9}]
}, Open  ]],

Cell["Complete per-meter capacitance matrix:", "Text"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"MatrixForm", "[", "c", "]"}]], "Input"],

Cell[BoxData[
 TagBox[
  RowBox[{"(", "\[NoBreak]", GridBox[{
     {"9.605214682590402`*^-11", 
      RowBox[{"-", "3.331846283713619`*^-11"}], 
      RowBox[{"-", "1.213138930940426`*^-12"}], 
      RowBox[{"-", "5.222522135659578`*^-13"}]},
     {
      RowBox[{"-", "3.329439655378682`*^-11"}], "1.121601492939742`*^-10", 
      RowBox[{"-", "3.285563024257395`*^-11"}], 
      RowBox[{"-", "1.213995293904682`*^-12"}]},
     {
      RowBox[{"-", "1.213995293904682`*^-12"}], 
      RowBox[{"-", "3.285563024257395`*^-11"}], "1.121601492939742`*^-10", 
      RowBox[{"-", "3.329439655378682`*^-11"}]},
     {
      RowBox[{"-", "5.222522135659578`*^-13"}], 
      RowBox[{"-", "1.213138930940426`*^-12"}], 
      RowBox[{"-", "3.331846283713619`*^-11"}], "9.605214682590402`*^-11"}
    },
    GridBoxAlignment->{
     "Columns" -> {{Center}}, "ColumnsIndexed" -> {}, "Rows" -> {{Baseline}}, 
      "RowsIndexed" -> {}},
    GridBoxSpacings->{"Columns" -> {
        Offset[0.27999999999999997`], {
         Offset[0.7]}, 
        Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
        Offset[0.2], {
         Offset[0.4]}, 
        Offset[0.2]}, "RowsIndexed" -> {}}], "\[NoBreak]", ")"}],
  Function[BoxForm`e$, 
   MatrixForm[BoxForm`e$]]]], "Output",
 CellChangeTimes->{3.65663003894989*^9, 3.6566351708093576`*^9, 
  3.656635347016589*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"?", "CloseFEMM"}]], "Input"],

Cell[BoxData[
 StyleBox["\<\"CloseFEMM[] shuts down the external instance of FEMM and \
closes the associated MathLink connection.\"\>", "MSG"]], "Print", \
"PrintUsage",
 CellChangeTimes->{3.656635347204096*^9},
 CellTags->"Info3656617347-8033622"]
}, Open  ]],

Cell[BoxData[
 RowBox[{"CloseFEMM", "[", "]"}]], "Input"]
}, Open  ]]
},
WindowSize->{1344, 631},
WindowMargins->{{0, Automatic}, {Automatic, 0}},
ShowSelection->True,
FrontEndVersion->"7.0 for Microsoft Windows (32-bit) (November 10, 2008)",
StyleDefinitions->"Default.nb"
]
(* End of Notebook Content *)

(* Internal cache information *)
(*CellTagsOutline
CellTagsIndex->{
 "Info3656617313-3331672"->{
  Cell[1587, 50, 247, 4, 40, "Print",
   CellTags->"Info3656617313-3331672"]},
 "Info3656617315-1678948"->{
  Cell[1987, 65, 440, 7, 92, "Print",
   CellTags->"Info3656617315-1678948"]},
 "Info3656617315-5754028"->{
  Cell[4100, 116, 370, 6, 126, "Print",
   CellTags->"Info3656617315-5754028"]},
 "Info3656617315-8498969"->{
  Cell[2586, 83, 1170, 17, 194, "Print",
   CellTags->"Info3656617315-8498969"]},
 "Info3656617316-6564226"->{
  Cell[6505, 206, 672, 10, 194, "Print",
   CellTags->"Info3656617316-6564226"]},
 "Info3656617316-8884446"->{
  Cell[5798, 181, 359, 6, 126, "Print",
   CellTags->"Info3656617316-8884446"]},
 "Info3656617317-1369433"->{
  Cell[9890, 307, 929, 14, 313, "Print",
   CellTags->"Info3656617317-1369433"]},
 "Info3656617317-2065219"->{
  Cell[7997, 253, 912, 13, 313, "Print",
   CellTags->"Info3656617317-2065219"]},
 "Info3656617317-2253206"->{
  Cell[9316, 286, 273, 5, 75, "Print",
   CellTags->"Info3656617317-2253206"]},
 "Info3656617317-8617361"->{
  Cell[11081, 335, 228, 4, 40, "Print",
   CellTags->"Info3656617317-8617361"]},
 "Info3656617318-2044832"->{
  Cell[14806, 450, 445, 7, 160, "Print",
   CellTags->"Info3656617318-2044832"]},
 "Info3656617318-8513279"->{
  Cell[11937, 370, 841, 13, 313, "Print",
   CellTags->"Info3656617318-8513279"]},
 "Info3656617318-9793415"->{
  Cell[13931, 426, 584, 9, 211, "Print",
   CellTags->"Info3656617318-9793415"]},
 "Info3656617319-8112750"->{
  Cell[16985, 519, 468, 7, 109, "Print",
   CellTags->"Info3656617319-8112750"]},
 "Info3656617319-8819928"->{
  Cell[18056, 550, 841, 13, 313, "Print",
   CellTags->"Info3656617319-8819928"]},
 "Info3656617320-6657519"->{
  Cell[29143, 820, 325, 6, 58, "Print",
   CellTags->"Info3656617320-6657519"]},
 "Info3656617321-7595342"->{
  Cell[29781, 841, 454, 7, 126, "Print",
   CellTags->"Info3656617321-7595342"]},
 "Info3656617328-1519253"->{
  Cell[30392, 859, 239, 4, 58, "Print",
   CellTags->"Info3656617328-1519253"]},
 "Info3656617330-9829355"->{
  Cell[30803, 874, 397, 6, 75, "Print",
   CellTags->"Info3656617330-9829355"]},
 "Info3656617334-4692816"->{
  Cell[33839, 973, 752, 11, 245, "Print",
   CellTags->"Info3656617334-4692816"],
  Cell[34594, 986, 560, 15, 23, "Print",
   CellTags->"Info3656617334-4692816"]},
 "Info3656617342-2368700"->{
  Cell[35555, 1021, 208, 4, 58, "Print",
   CellTags->"Info3656617342-2368700"]},
 "Info3656617347-8033622"->{
  Cell[39443, 1142, 249, 5, 40, "Print",
   CellTags->"Info3656617347-8033622"]}
 }
*)
(*CellTagsIndex
CellTagsIndex->{
 {"Info3656617313-3331672", 40109, 1165},
 {"Info3656617315-1678948", 40217, 1168},
 {"Info3656617315-5754028", 40325, 1171},
 {"Info3656617315-8498969", 40435, 1174},
 {"Info3656617316-6564226", 40546, 1177},
 {"Info3656617316-8884446", 40657, 1180},
 {"Info3656617317-1369433", 40767, 1183},
 {"Info3656617317-2065219", 40878, 1186},
 {"Info3656617317-2253206", 40989, 1189},
 {"Info3656617317-8617361", 41098, 1192},
 {"Info3656617318-2044832", 41208, 1195},
 {"Info3656617318-8513279", 41319, 1198},
 {"Info3656617318-9793415", 41431, 1201},
 {"Info3656617319-8112750", 41542, 1204},
 {"Info3656617319-8819928", 41653, 1207},
 {"Info3656617320-6657519", 41765, 1210},
 {"Info3656617321-7595342", 41875, 1213},
 {"Info3656617328-1519253", 41986, 1216},
 {"Info3656617330-9829355", 42096, 1219},
 {"Info3656617334-4692816", 42206, 1222},
 {"Info3656617342-2368700", 42399, 1227},
 {"Info3656617347-8033622", 42510, 1230}
 }
*)
(*NotebookFileOutline
Notebook[{
Cell[CellGroupData[{
Cell[567, 22, 41, 0, 71, "Section"],
Cell[CellGroupData[{
Cell[633, 26, 144, 2, 31, "Input"],
Cell[780, 30, 241, 3, 23, "Print"]
}, Open  ]],
Cell[1036, 36, 472, 7, 47, "Text"],
Cell[CellGroupData[{
Cell[1533, 47, 51, 1, 31, "Input"],
Cell[1587, 50, 247, 4, 40, "Print",
 CellTags->"Info3656617313-3331672"]
}, Open  ]],
Cell[1849, 57, 56, 1, 31, "Input"],
Cell[CellGroupData[{
Cell[1930, 62, 54, 1, 31, "Input"],
Cell[1987, 65, 440, 7, 92, "Print",
 CellTags->"Info3656617315-1678948"]
}, Open  ]],
Cell[2442, 75, 64, 1, 31, "Input"],
Cell[CellGroupData[{
Cell[2531, 80, 52, 1, 31, "Input"],
Cell[2586, 83, 1170, 17, 194, "Print",
 CellTags->"Info3656617315-8498969"]
}, Open  ]],
Cell[3771, 103, 243, 6, 31, "Input"],
Cell[CellGroupData[{
Cell[4039, 113, 58, 1, 31, "Input"],
Cell[4100, 116, 370, 6, 126, "Print",
 CellTags->"Info3656617315-5754028"]
}, Open  ]],
Cell[4485, 125, 190, 6, 31, "Input"],
Cell[4678, 133, 244, 8, 31, "Input"],
Cell[4925, 143, 232, 8, 31, "Input"],
Cell[5160, 153, 288, 10, 31, "Input"],
Cell[5451, 165, 266, 9, 31, "Input"],
Cell[CellGroupData[{
Cell[5742, 178, 53, 1, 31, "Input"],
Cell[5798, 181, 359, 6, 126, "Print",
 CellTags->"Info3656617316-8884446"]
}, Open  ]],
Cell[6172, 190, 253, 9, 31, "Input"],
Cell[CellGroupData[{
Cell[6450, 203, 52, 1, 31, "Input"],
Cell[6505, 206, 672, 10, 194, "Print",
 CellTags->"Info3656617316-6564226"]
}, Open  ]],
Cell[7192, 219, 276, 9, 31, "Input"],
Cell[7471, 230, 218, 7, 31, "Input"],
Cell[7692, 239, 220, 7, 31, "Input"],
Cell[CellGroupData[{
Cell[7937, 250, 57, 1, 31, "Input"],
Cell[7997, 253, 912, 13, 313, "Print",
 CellTags->"Info3656617317-2065219"]
}, Open  ]],
Cell[8924, 269, 149, 4, 31, "Input"],
Cell[9076, 275, 151, 4, 31, "Input"],
Cell[CellGroupData[{
Cell[9252, 283, 61, 1, 31, "Input"],
Cell[9316, 286, 273, 5, 75, "Print",
 CellTags->"Info3656617317-2253206"]
}, Open  ]],
Cell[9604, 294, 96, 2, 31, "Input"],
Cell[9703, 298, 97, 2, 31, "Input"],
Cell[CellGroupData[{
Cell[9825, 304, 62, 1, 31, "Input"],
Cell[9890, 307, 929, 14, 313, "Print",
 CellTags->"Info3656617317-1369433"]
}, Open  ]],
Cell[10834, 324, 161, 4, 31, "Input"],
Cell[CellGroupData[{
Cell[11020, 332, 58, 1, 31, "Input"],
Cell[11081, 335, 228, 4, 40, "Print",
 CellTags->"Info3656617317-8617361"]
}, Open  ]],
Cell[11324, 342, 63, 1, 31, "Input"],
Cell[11390, 345, 111, 3, 31, "Input"],
Cell[11504, 350, 113, 3, 31, "Input"],
Cell[11620, 355, 132, 4, 31, "Input"],
Cell[11755, 361, 95, 2, 31, "Input"],
Cell[CellGroupData[{
Cell[11875, 367, 59, 1, 31, "Input"],
Cell[11937, 370, 841, 13, 313, "Print",
 CellTags->"Info3656617318-8513279"]
}, Open  ]],
Cell[12793, 386, 165, 4, 31, "Input"],
Cell[12961, 392, 63, 1, 31, "Input"],
Cell[13027, 395, 819, 24, 132, "Input"],
Cell[CellGroupData[{
Cell[13871, 423, 57, 1, 31, "Input"],
Cell[13931, 426, 584, 9, 211, "Print",
 CellTags->"Info3656617318-9793415"]
}, Open  ]],
Cell[14530, 438, 126, 2, 31, "Input"],
Cell[14659, 442, 63, 1, 31, "Input"],
Cell[CellGroupData[{
Cell[14747, 447, 56, 1, 31, "Input"],
Cell[14806, 450, 445, 7, 160, "Print",
 CellTags->"Info3656617318-2044832"]
}, Open  ]],
Cell[15266, 460, 119, 2, 31, "Input"],
Cell[15388, 464, 129, 3, 31, "Input"],
Cell[15520, 469, 111, 3, 31, "Input"],
Cell[15634, 474, 92, 2, 31, "Input"],
Cell[15729, 478, 94, 2, 31, "Input"],
Cell[15826, 482, 363, 10, 72, "Input"],
Cell[16192, 494, 448, 12, 92, "Input"],
Cell[16643, 508, 253, 4, 29, "Text"],
Cell[CellGroupData[{
Cell[16921, 516, 61, 1, 31, "Input"],
Cell[16985, 519, 468, 7, 109, "Print",
 CellTags->"Info3656617319-8112750"]
}, Open  ]],
Cell[17468, 529, 123, 2, 31, "Input"],
Cell[17594, 533, 123, 2, 31, "Input"],
Cell[17720, 537, 123, 2, 31, "Input"],
Cell[17846, 541, 123, 2, 31, "Input"],
Cell[CellGroupData[{
Cell[17994, 547, 59, 1, 31, "Input"],
Cell[18056, 550, 841, 13, 313, "Print",
 CellTags->"Info3656617319-8819928"]
}, Open  ]],
Cell[18912, 566, 779, 22, 132, "Input"],
Cell[19694, 590, 899, 30, 132, "Input"],
Cell[20596, 622, 1003, 34, 132, "Input"],
Cell[21602, 658, 1003, 34, 132, "Input"],
Cell[22608, 694, 61, 0, 29, "Text"],
Cell[CellGroupData[{
Cell[22694, 698, 354, 9, 92, "Input"],
Cell[23051, 709, 6001, 103, 351, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[29089, 817, 51, 1, 31, "Input"],
Cell[29143, 820, 325, 6, 58, "Print",
 CellTags->"Info3656617320-6657519"]
}, Open  ]],
Cell[29483, 829, 218, 5, 31, "Input"],
Cell[CellGroupData[{
Cell[29726, 838, 52, 1, 31, "Input"],
Cell[29781, 841, 454, 7, 126, "Print",
 CellTags->"Info3656617321-7595342"]
}, Open  ]],
Cell[30250, 851, 57, 1, 31, "Input"],
Cell[CellGroupData[{
Cell[30332, 856, 57, 1, 31, "Input"],
Cell[30392, 859, 239, 4, 58, "Print",
 CellTags->"Info3656617328-1519253"]
}, Open  ]],
Cell[30646, 866, 62, 1, 31, "Input"],
Cell[CellGroupData[{
Cell[30733, 871, 67, 1, 31, "Input"],
Cell[30803, 874, 397, 6, 75, "Print",
 CellTags->"Info3656617330-9829355"]
}, Open  ]],
Cell[31215, 883, 151, 5, 31, "Input"],
Cell[31369, 890, 119, 3, 29, "Text"],
Cell[CellGroupData[{
Cell[31513, 897, 713, 17, 92, "Input"],
Cell[32229, 916, 331, 7, 33, "Output"]
}, Open  ]],
Cell[32575, 926, 96, 2, 29, "Text"],
Cell[CellGroupData[{
Cell[32696, 932, 539, 16, 31, "Input"],
Cell[33238, 950, 334, 8, 33, "Output"]
}, Open  ]],
Cell[33587, 961, 137, 3, 29, "Text"],
Cell[CellGroupData[{
Cell[33749, 968, 65, 1, 31, "Input"],
Cell[CellGroupData[{
Cell[33839, 973, 752, 11, 245, "Print",
 CellTags->"Info3656617334-4692816"],
Cell[34594, 986, 560, 15, 23, "Print",
 CellTags->"Info3656617334-4692816"]
}, Open  ]]
}, Open  ]],
Cell[35181, 1005, 116, 2, 31, "Input"],
Cell[35300, 1009, 116, 2, 31, "Input"],
Cell[35419, 1013, 57, 1, 31, "Input"],
Cell[CellGroupData[{
Cell[35501, 1018, 51, 1, 31, "Input"],
Cell[35555, 1021, 208, 4, 58, "Print",
 CellTags->"Info3656617342-2368700"]
}, Open  ]],
Cell[35778, 1028, 56, 1, 31, "Input"],
Cell[CellGroupData[{
Cell[35859, 1033, 713, 17, 92, "Input"],
Cell[36575, 1052, 337, 8, 33, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[36949, 1065, 539, 16, 31, "Input"],
Cell[37491, 1083, 335, 8, 33, "Output"]
}, Open  ]],
Cell[37841, 1094, 54, 0, 29, "Text"],
Cell[CellGroupData[{
Cell[37920, 1098, 63, 1, 31, "Input"],
Cell[37986, 1101, 1365, 33, 98, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[39388, 1139, 52, 1, 31, "Input"],
Cell[39443, 1142, 249, 5, 40, "Print",
 CellTags->"Info3656617347-8033622"]
}, Open  ]],
Cell[39707, 1150, 57, 1, 31, "Input"]
}, Open  ]]
}
]
*)

(* End of internal cache information *)
